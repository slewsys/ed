# DO NOT EDIT! GENERATED AUTOMATICALLY!
# Copyright (C) 2002-2025 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
#
# This file represents the compiled summary of the specification in
# gnulib-cache.m4. It lists the computed macro invocations that need
# to be invoked from configure.ac.
# In projects that use version control, this file can be treated like
# other built files.


# This macro should be invoked from ./configure.ac, in the section
# "Checks for programs", right after AC_PROG_CC, and certainly before
# any checks for libraries, header files, types and library functions.
AC_DEFUN([gl_EARLY],
[
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable

  # Pre-early section.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_PROG_AR_RANLIB])

  # Code from module absolute-header:
  # Code from module assert-h:
  # Code from module attribute:
  # Code from module bool:
  # Code from module btowc:
  # Code from module builtin-expect:
  # Code from module c99:
  # Code from module extensions:
  # This is actually already done in the pre-early phase.
  # AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  # Code from module extensions-aix:
  AC_REQUIRE([gl_USE_AIX_EXTENSIONS])
  # Code from module extern-inline:
  # Code from module gen-header:
  # Code from module getopt-gnu:
  # Code from module getopt-posix:
  # Code from module gettext-h:
  # Code from module glibc-internal/dynarray:
  # Code from module gnulib-i18n:
  # Code from module hard-locale:
  # Code from module include_next:
  # Code from module intprops:
  # Code from module inttypes-h-incomplete:
  # Code from module iswblank:
  # Code from module iswctype:
  # Code from module iswdigit:
  # Code from module iswpunct:
  # Code from module iswxdigit:
  # Code from module langinfo-h:
  # Code from module libc-config:
  # Code from module limits-h:
  # Code from module localcharset:
  # Code from module locale-h:
  # Code from module localeconv:
  # Code from module lock:
  # Code from module malloc-gnu:
  # Code from module malloc-posix:
  # Code from module mbrtowc:
  # Code from module mbsinit:
  # Code from module mbszero:
  # Code from module mbtowc:
  # Code from module multiarch:
  # Code from module nl_langinfo:
  # Code from module nocrash:
  # Code from module once:
  # Code from module pthread-h:
  gl_ANYTHREADLIB_EARLY
  # Code from module pthread-once:
  # Code from module regex:
  # Code from module sched-h:
  # Code from module setlocale-null:
  # Code from module setlocale-null-unlocked:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module ssize_t:
  # Code from module std-gnu11:
  # Code from module stdckdint-h:
  # Code from module stddef-h:
  # Code from module stdint-h:
  # Code from module stdlib-h:
  # Code from module streq:
  # Code from module sys_types-h:
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  # Code from module threadlib:
  gl_THREADLIB_EARLY
  # Code from module time-h:
  # Code from module unistd-h:
  # Code from module vararrays:
  # Code from module verify:
  # Code from module wchar-h:
  # Code from module wcrtomb:
  # Code from module wctype:
  # Code from module wctype-h:
  # Code from module windows-mutex:
  # Code from module windows-once:
  # Code from module windows-recmutex:
  # Code from module windows-rwlock:
])

# This macro should be invoked from ./configure.ac, in the section
# "Check for header files, types and library functions".
AC_DEFUN([gl_INIT],
[
  AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
  gl_cond_libtool=false
  gl_libdeps=
  gl_ltlibdeps=
  gl_m4_base='m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gl])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='lib'
  gl_source_base_prefix=
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FUNC_GETOPT_GNU
  dnl Because of the way gl_FUNC_GETOPT_GNU is implemented (the gl_getopt_required
  dnl mechanism), there is no need to do any AC_LIBOBJ or AC_SUBST here; they are
  dnl done in the getopt-posix module.
  gl_FUNC_GETOPT_POSIX
  gl_CONDITIONAL_HEADER([getopt.h])
  gl_CONDITIONAL_HEADER([getopt-cdefs.h])
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_GETOPT], [test $REPLACE_GETOPT = 1])
  AM_COND_IF([GL_COND_OBJ_GETOPT], [
    dnl Define the substituted variable GNULIB_UNISTD_H_GETOPT to 1.
    gl_UNISTD_H_REQUIRE_DEFAULTS
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT], [1])
  ])
  gl_UNISTD_MODULE_INDICATOR([getopt-posix])
  gl_MUSL_LIBC
  gl_REGEX
  gl_CONDITIONAL([GL_COND_OBJ_REGEX], [test $ac_use_included_regex = yes])
  AM_COND_IF([GL_COND_OBJ_REGEX], [
    gl_PREREQ_REGEX
  ])
  gt_TYPE_SSIZE_T
  gl_STDDEF_H
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_CONDITIONAL_HEADER([stddef.h])
  AC_PROG_MKDIR_P
  gl_SYS_TYPES_H
  gl_SYS_TYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UNISTD_H
  gl_UNISTD_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_C_VARARRAYS
  gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f=false
  gl_gnulib_enabled_attribute=false
  gl_gnulib_enabled_bool=false
  gl_gnulib_enabled_btowc=false
  gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547=false
  gl_gnulib_enabled_303a13eed89acabfd6998a952149f2d5=false
  gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36=false
  gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c=false
  gl_gnulib_enabled_5c482add6d2c3d47d6540583663adb7f=false
  gl_gnulib_enabled_30838f5439487421042f2225bed3af76=false
  gl_gnulib_enabled_intprops=false
  gl_gnulib_enabled_63db4f47e61e1074f851865fcd154b38=false
  gl_gnulib_enabled_iswblank=false
  gl_gnulib_enabled_iswctype=false
  gl_gnulib_enabled_iswdigit=false
  gl_gnulib_enabled_iswpunct=false
  gl_gnulib_enabled_iswxdigit=false
  gl_gnulib_enabled_4177a27eb1d1c02825daa4fe09dd8ae0=false
  gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467=false
  gl_gnulib_enabled_46f732ef6fef4ccd68de017c9ed88bed=false
  gl_gnulib_enabled_localcharset=false
  gl_gnulib_enabled_dce9a78e70979abe3a6dbad14df7de3e=false
  gl_gnulib_enabled_localeconv=false
  gl_gnulib_enabled_lock=false
  gl_gnulib_enabled_e80bf6f757095d2e5fc94dafb8f8fc8b=false
  gl_gnulib_enabled_ef455225c00f5049c808c2eda3e76866=false
  gl_gnulib_enabled_mbrtowc=false
  gl_gnulib_enabled_mbsinit=false
  gl_gnulib_enabled_mbszero=false
  gl_gnulib_enabled_mbtowc=false
  gl_gnulib_enabled_multiarch=false
  gl_gnulib_enabled_nl_langinfo=false
  gl_gnulib_enabled_once=false
  gl_gnulib_enabled_94ea50e7ff7c2508f8a5894b17b1211c=false
  gl_gnulib_enabled_e0dc424e76447be3f4b8566d84038f5a=false
  gl_gnulib_enabled_338d7c29761e34ccaa9a69c658124cd8=false
  gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd=false
  gl_gnulib_enabled_e7ab648fbf42deb155fb024e2402e26d=false
  gl_gnulib_enabled_b3ae4a413a1340415f34a52d1dafb147=false
  gl_gnulib_enabled_6897f839bc8beda050d8c73ec20bb548=false
  gl_gnulib_enabled_a2d2e11ad96cca5edf016975265d1b4f=false
  gl_gnulib_enabled_d35c18bd66af1352be89e09b51bcb62b=false
  gl_gnulib_enabled_streq=false
  gl_gnulib_enabled_threadlib=false
  gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd=false
  gl_gnulib_enabled_verify=false
  gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44=false
  gl_gnulib_enabled_wcrtomb=false
  gl_gnulib_enabled_wctype=false
  gl_gnulib_enabled_3dcce957eadc896e63ab5f137947b410=false
  gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440=false
  gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab=false
  gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354=false
  gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef=false
  func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f ()
  {
    if $gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f; then :; else
      gl_ASSERT_H
      gl_CONDITIONAL_HEADER([assert.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f=true
    fi
  }
  func_gl_gnulib_m4code_attribute ()
  {
    if $gl_gnulib_enabled_attribute; then :; else
      gl_gnulib_enabled_attribute=true
    fi
  }
  func_gl_gnulib_m4code_bool ()
  {
    if $gl_gnulib_enabled_bool; then :; else
      gl_C_BOOL
      gl_gnulib_enabled_bool=true
    fi
  }
  func_gl_gnulib_m4code_btowc ()
  {
    if $gl_gnulib_enabled_btowc; then :; else
      gl_FUNC_BTOWC
      gl_CONDITIONAL([GL_COND_OBJ_BTOWC],
                     [test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1])
      AM_COND_IF([GL_COND_OBJ_BTOWC], [
        gl_PREREQ_BTOWC
      ])
      gl_WCHAR_MODULE_INDICATOR([btowc])
      gl_gnulib_enabled_btowc=true
      if test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1; then
        func_gl_gnulib_m4code_mbrtowc
      fi
      if test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1; then
        func_gl_gnulib_m4code_mbszero
      fi
      if test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1; then
        func_gl_gnulib_m4code_mbtowc
      fi
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
    fi
  }
  func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547 ()
  {
    if $gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547; then :; else
      gl___BUILTIN_EXPECT
      gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547=true
    fi
  }
  func_gl_gnulib_m4code_303a13eed89acabfd6998a952149f2d5 ()
  {
    if $gl_gnulib_enabled_303a13eed89acabfd6998a952149f2d5; then :; else
      gl_gnulib_enabled_303a13eed89acabfd6998a952149f2d5=true
    fi
  }
  func_gl_gnulib_m4code_be453cec5eecf5731a274f2de7f2db36 ()
  {
    if $gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36; then :; else
      AC_SUBST([LIBINTL])
      AC_SUBST([LTLIBINTL])
      gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36=true
    fi
  }
  func_gl_gnulib_m4code_fd38c7e463b54744b77b98aeafb4fa7c ()
  {
    if $gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c; then :; else
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c=true
      func_gl_gnulib_m4code_bool
      func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547
      func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467
      func_gl_gnulib_m4code_6897f839bc8beda050d8c73ec20bb548
    fi
  }
  func_gl_gnulib_m4code_5c482add6d2c3d47d6540583663adb7f ()
  {
    if $gl_gnulib_enabled_5c482add6d2c3d47d6540583663adb7f; then :; else
      GNULIB_I18N
      gl_gnulib_enabled_5c482add6d2c3d47d6540583663adb7f=true
    fi
  }
  func_gl_gnulib_m4code_30838f5439487421042f2225bed3af76 ()
  {
    if $gl_gnulib_enabled_30838f5439487421042f2225bed3af76; then :; else
      AC_REQUIRE([gl_FUNC_SETLOCALE_NULL])
      HARD_LOCALE_LIB="$SETLOCALE_NULL_LIB"
      AC_SUBST([HARD_LOCALE_LIB])
      dnl For backward compatibility.
      LIB_HARD_LOCALE="$HARD_LOCALE_LIB"
      AC_SUBST([LIB_HARD_LOCALE])
      gl_gnulib_enabled_30838f5439487421042f2225bed3af76=true
      func_gl_gnulib_m4code_bool
      func_gl_gnulib_m4code_e7e881d32ca02f1c997b13c737c64bbd
    fi
  }
  func_gl_gnulib_m4code_intprops ()
  {
    if $gl_gnulib_enabled_intprops; then :; else
      gl_gnulib_enabled_intprops=true
    fi
  }
  func_gl_gnulib_m4code_63db4f47e61e1074f851865fcd154b38 ()
  {
    if $gl_gnulib_enabled_63db4f47e61e1074f851865fcd154b38; then :; else
      gl_INTTYPES_INCOMPLETE
      gl_INTTYPES_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_63db4f47e61e1074f851865fcd154b38=true
      func_gl_gnulib_m4code_multiarch
      func_gl_gnulib_m4code_a2d2e11ad96cca5edf016975265d1b4f
    fi
  }
  func_gl_gnulib_m4code_iswblank ()
  {
    if $gl_gnulib_enabled_iswblank; then :; else
      gl_FUNC_ISWBLANK
      gl_CONDITIONAL([GL_COND_OBJ_ISWBLANK],
                     [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && { test $HAVE_ISWBLANK = 0 || test $REPLACE_ISWBLANK = 1; }])
      gl_WCTYPE_MODULE_INDICATOR([iswblank])
      gl_gnulib_enabled_iswblank=true
      func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410
    fi
  }
  func_gl_gnulib_m4code_iswctype ()
  {
    if $gl_gnulib_enabled_iswctype; then :; else
      gl_FUNC_ISWCTYPE
      gl_CONDITIONAL([GL_COND_OBJ_ISWCTYPE],
                     [test $HAVE_WCTYPE_T = 0 || test $GNULIBHEADERS_OVERRIDE_WINT_T = 1 || test $REPLACE_WCTYPE = 1])
      gl_WCTYPE_MODULE_INDICATOR([iswctype])
      gl_gnulib_enabled_iswctype=true
      func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410
    fi
  }
  func_gl_gnulib_m4code_iswdigit ()
  {
    if $gl_gnulib_enabled_iswdigit; then :; else
      gl_FUNC_ISWDIGIT
      gl_CONDITIONAL([GL_COND_OBJ_ISWDIGIT],
                     [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWDIGIT = 1])
      gl_WCTYPE_MODULE_INDICATOR([iswdigit])
      gl_gnulib_enabled_iswdigit=true
      func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410
    fi
  }
  func_gl_gnulib_m4code_iswpunct ()
  {
    if $gl_gnulib_enabled_iswpunct; then :; else
      gl_FUNC_ISWPUNCT
      gl_CONDITIONAL([GL_COND_OBJ_ISWPUNCT],
                     [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWPUNCT = 1])
      gl_WCTYPE_MODULE_INDICATOR([iswpunct])
      gl_gnulib_enabled_iswpunct=true
      func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410
    fi
  }
  func_gl_gnulib_m4code_iswxdigit ()
  {
    if $gl_gnulib_enabled_iswxdigit; then :; else
      gl_FUNC_ISWXDIGIT
      gl_CONDITIONAL([GL_COND_OBJ_ISWXDIGIT],
                     [! { test $HAVE_ISWCNTRL = 0 || test $REPLACE_ISWCNTRL = 1; } && test $REPLACE_ISWXDIGIT = 1])
      gl_WCTYPE_MODULE_INDICATOR([iswxdigit])
      gl_gnulib_enabled_iswxdigit=true
      func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410
    fi
  }
  func_gl_gnulib_m4code_4177a27eb1d1c02825daa4fe09dd8ae0 ()
  {
    if $gl_gnulib_enabled_4177a27eb1d1c02825daa4fe09dd8ae0; then :; else
      gl_LANGINFO_H
      gl_LANGINFO_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_4177a27eb1d1c02825daa4fe09dd8ae0=true
    fi
  }
  func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467 ()
  {
    if $gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467; then :; else
      gl___INLINE
      gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467=true
    fi
  }
  func_gl_gnulib_m4code_46f732ef6fef4ccd68de017c9ed88bed ()
  {
    if $gl_gnulib_enabled_46f732ef6fef4ccd68de017c9ed88bed; then :; else
      gl_LIMITS_H
      gl_CONDITIONAL_HEADER([limits.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_46f732ef6fef4ccd68de017c9ed88bed=true
    fi
  }
  func_gl_gnulib_m4code_localcharset ()
  {
    if $gl_gnulib_enabled_localcharset; then :; else
      gl_LOCALCHARSET
      dnl For backward compatibility. Some packages still use this.
      LOCALCHARSET_TESTS_ENVIRONMENT=
      AC_SUBST([LOCALCHARSET_TESTS_ENVIRONMENT])
      gl_gnulib_enabled_localcharset=true
    fi
  }
  func_gl_gnulib_m4code_dce9a78e70979abe3a6dbad14df7de3e ()
  {
    if $gl_gnulib_enabled_dce9a78e70979abe3a6dbad14df7de3e; then :; else
      gl_LOCALE_H
      gl_LOCALE_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_dce9a78e70979abe3a6dbad14df7de3e=true
    fi
  }
  func_gl_gnulib_m4code_localeconv ()
  {
    if $gl_gnulib_enabled_localeconv; then :; else
      gl_FUNC_LOCALECONV
      gl_CONDITIONAL([GL_COND_OBJ_LOCALECONV], [test $REPLACE_LOCALECONV = 1])
      AM_COND_IF([GL_COND_OBJ_LOCALECONV], [
        gl_PREREQ_LOCALECONV
      ])
      gl_LOCALE_MODULE_INDICATOR([localeconv])
      gl_MODULE_INDICATOR([localeconv])
      gl_gnulib_enabled_localeconv=true
      func_gl_gnulib_m4code_dce9a78e70979abe3a6dbad14df7de3e
    fi
  }
  func_gl_gnulib_m4code_lock ()
  {
    if $gl_gnulib_enabled_lock; then :; else
      gl_LOCK
      gl_MODULE_INDICATOR([lock])
      gl_gnulib_enabled_lock=true
      func_gl_gnulib_m4code_once
      func_gl_gnulib_m4code_threadlib
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_503a4cb75d69c787103d0aa2ab7d8440
      fi
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_f0efff84a70f4afba30902bb8ffe9354
      fi
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_8bb827fe37eaccf1b97feb0c87bc92ef
      fi
    fi
  }
  func_gl_gnulib_m4code_e80bf6f757095d2e5fc94dafb8f8fc8b ()
  {
    if $gl_gnulib_enabled_e80bf6f757095d2e5fc94dafb8f8fc8b; then :; else
      gl_FUNC_MALLOC_GNU
      if test $REPLACE_MALLOC_FOR_MALLOC_GNU = 1; then
        AC_LIBOBJ([malloc])
      fi
      gl_STDLIB_MODULE_INDICATOR([malloc-gnu])
      gl_gnulib_enabled_e80bf6f757095d2e5fc94dafb8f8fc8b=true
      func_gl_gnulib_m4code_303a13eed89acabfd6998a952149f2d5
      func_gl_gnulib_m4code_ef455225c00f5049c808c2eda3e76866
      if test $REPLACE_CALLOC_FOR_MALLOC_GNU = 1; then
        func_gl_gnulib_m4code_6897f839bc8beda050d8c73ec20bb548
      fi
    fi
  }
  func_gl_gnulib_m4code_ef455225c00f5049c808c2eda3e76866 ()
  {
    if $gl_gnulib_enabled_ef455225c00f5049c808c2eda3e76866; then :; else
      AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
      if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
        AC_LIBOBJ([malloc])
      fi
      gl_STDLIB_MODULE_INDICATOR([malloc-posix])
      gl_gnulib_enabled_ef455225c00f5049c808c2eda3e76866=true
      if test $REPLACE_CALLOC_FOR_MALLOC_POSIX = 1; then
        func_gl_gnulib_m4code_6897f839bc8beda050d8c73ec20bb548
      fi
      func_gl_gnulib_m4code_d35c18bd66af1352be89e09b51bcb62b
    fi
  }
  func_gl_gnulib_m4code_mbrtowc ()
  {
    if $gl_gnulib_enabled_mbrtowc; then :; else
      gl_FUNC_MBRTOWC
      gl_CONDITIONAL([GL_COND_OBJ_MBRTOWC],
                     [test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1])
      AM_COND_IF([GL_COND_OBJ_MBRTOWC], [
        if test $REPLACE_MBSTATE_T = 1; then
          AC_LIBOBJ([lc-charset-dispatch])
          AC_LIBOBJ([mbtowc-lock])
          gl_PREREQ_MBTOWC_LOCK
        fi
        gl_PREREQ_MBRTOWC
      ])
      gl_WCHAR_MODULE_INDICATOR([mbrtowc])
      gl_gnulib_enabled_mbrtowc=true
      if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
        func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
      fi
      if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
        func_gl_gnulib_m4code_attribute
      fi
      if { test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; } && test $REPLACE_MBSTATE_T = 0; then
        func_gl_gnulib_m4code_30838f5439487421042f2225bed3af76
      fi
      if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
        func_gl_gnulib_m4code_localcharset
      fi
      if { test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; } && test $REPLACE_MBSTATE_T = 0; then
        func_gl_gnulib_m4code_mbsinit
      fi
      if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
        func_gl_gnulib_m4code_a2d2e11ad96cca5edf016975265d1b4f
      fi
      if test $HAVE_MBRTOWC = 0 || test $REPLACE_MBRTOWC = 1; then
        func_gl_gnulib_m4code_streq
      fi
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
    fi
  }
  func_gl_gnulib_m4code_mbsinit ()
  {
    if $gl_gnulib_enabled_mbsinit; then :; else
      gl_FUNC_MBSINIT
      gl_CONDITIONAL([GL_COND_OBJ_MBSINIT],
                     [test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1])
      AM_COND_IF([GL_COND_OBJ_MBSINIT], [
        gl_PREREQ_MBSINIT
      ])
      gl_WCHAR_MODULE_INDICATOR([mbsinit])
      gl_gnulib_enabled_mbsinit=true
      if test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1; then
        func_gl_gnulib_m4code_d07eca4c7a24aaac657c64e6568d4c2f
      fi
      if test $HAVE_MBSINIT = 0 || test $REPLACE_MBSINIT = 1; then
        func_gl_gnulib_m4code_mbrtowc
      fi
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
    fi
  }
  func_gl_gnulib_m4code_mbszero ()
  {
    if $gl_gnulib_enabled_mbszero; then :; else
      AC_REQUIRE([AC_TYPE_MBSTATE_T])
      gl_MBSTATE_T_BROKEN
      gl_MUSL_LIBC
      gl_WCHAR_MODULE_INDICATOR([mbszero])
      gl_gnulib_enabled_mbszero=true
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
    fi
  }
  func_gl_gnulib_m4code_mbtowc ()
  {
    if $gl_gnulib_enabled_mbtowc; then :; else
      gl_FUNC_MBTOWC
      gl_CONDITIONAL([GL_COND_OBJ_MBTOWC],
                     [test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1])
      AM_COND_IF([GL_COND_OBJ_MBTOWC], [
        gl_PREREQ_MBTOWC
      ])
      gl_STDLIB_MODULE_INDICATOR([mbtowc])
      gl_gnulib_enabled_mbtowc=true
      if test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1; then
        func_gl_gnulib_m4code_mbrtowc
      fi
      if test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1; then
        func_gl_gnulib_m4code_mbszero
      fi
      func_gl_gnulib_m4code_d35c18bd66af1352be89e09b51bcb62b
      if test $HAVE_MBTOWC = 0 || test $REPLACE_MBTOWC = 1; then
        func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
      fi
    fi
  }
  func_gl_gnulib_m4code_multiarch ()
  {
    if $gl_gnulib_enabled_multiarch; then :; else
      gl_MULTIARCH
      gl_gnulib_enabled_multiarch=true
    fi
  }
  func_gl_gnulib_m4code_nl_langinfo ()
  {
    if $gl_gnulib_enabled_nl_langinfo; then :; else
      gl_FUNC_NL_LANGINFO
      gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO],
                     [test $HAVE_NL_LANGINFO = 0 || test $REPLACE_NL_LANGINFO = 1])
      gl_CONDITIONAL([GL_COND_OBJ_NL_LANGINFO_LOCK],
                     [test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0])
      if test $REPLACE_NL_LANGINFO = 1 && test $NL_LANGINFO_MTSAFE = 0; then
        gl_PREREQ_NL_LANGINFO_LOCK
      fi
      gl_LANGINFO_MODULE_INDICATOR([nl_langinfo])
      gl_gnulib_enabled_nl_langinfo=true
      func_gl_gnulib_m4code_4177a27eb1d1c02825daa4fe09dd8ae0
      if test $HAVE_NL_LANGINFO = 0 || test $REPLACE_NL_LANGINFO = 1; then
        func_gl_gnulib_m4code_localeconv
      fi
      if test $HAVE_NL_LANGINFO = 0 || test $HAVE_LANGINFO_CODESET = 0; then
        func_gl_gnulib_m4code_e7e881d32ca02f1c997b13c737c64bbd
      fi
    fi
  }
  func_gl_gnulib_m4code_once ()
  {
    if $gl_gnulib_enabled_once; then :; else
      gl_ONCE
      gl_gnulib_enabled_once=true
      if test $gl_threads_api = posix; then
        func_gl_gnulib_m4code_e0dc424e76447be3f4b8566d84038f5a
      fi
      func_gl_gnulib_m4code_threadlib
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_68a4501daeca58988392c7e60b4917ab
      fi
    fi
  }
  func_gl_gnulib_m4code_94ea50e7ff7c2508f8a5894b17b1211c ()
  {
    if $gl_gnulib_enabled_94ea50e7ff7c2508f8a5894b17b1211c; then :; else
      gl_PTHREAD_H
      gl_PTHREAD_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_94ea50e7ff7c2508f8a5894b17b1211c=true
      func_gl_gnulib_m4code_338d7c29761e34ccaa9a69c658124cd8
      func_gl_gnulib_m4code_b3ae4a413a1340415f34a52d1dafb147
      func_gl_gnulib_m4code_cb7562e84d8cf7185af782fe497b53dd
    fi
  }
  func_gl_gnulib_m4code_e0dc424e76447be3f4b8566d84038f5a ()
  {
    if $gl_gnulib_enabled_e0dc424e76447be3f4b8566d84038f5a; then :; else
      gl_PTHREAD_ONCE
      gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_ONCE],
                     [test $HAVE_PTHREAD_ONCE = 0 || test $REPLACE_PTHREAD_ONCE = 1])
      gl_PTHREAD_MODULE_INDICATOR([pthread-once])
      gl_gnulib_enabled_e0dc424e76447be3f4b8566d84038f5a=true
      func_gl_gnulib_m4code_94ea50e7ff7c2508f8a5894b17b1211c
      if test $gl_threads_api = windows; then
        func_gl_gnulib_m4code_68a4501daeca58988392c7e60b4917ab
      fi
    fi
  }
  func_gl_gnulib_m4code_338d7c29761e34ccaa9a69c658124cd8 ()
  {
    if $gl_gnulib_enabled_338d7c29761e34ccaa9a69c658124cd8; then :; else
      gl_SCHED_H
      gl_SCHED_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_338d7c29761e34ccaa9a69c658124cd8=true
    fi
  }
  func_gl_gnulib_m4code_e7e881d32ca02f1c997b13c737c64bbd ()
  {
    if $gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd; then :; else
      gl_FUNC_SETLOCALE_NULL
      gl_CONDITIONAL([GL_COND_OBJ_SETLOCALE_LOCK],
                     [test $SETLOCALE_NULL_ALL_MTSAFE = 0 || test $SETLOCALE_NULL_ONE_MTSAFE = 0])
      AM_COND_IF([GL_COND_OBJ_SETLOCALE_LOCK], [
        gl_PREREQ_SETLOCALE_LOCK
      ])
      gl_LOCALE_MODULE_INDICATOR([setlocale_null])
      gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd=true
      func_gl_gnulib_m4code_dce9a78e70979abe3a6dbad14df7de3e
      func_gl_gnulib_m4code_e7ab648fbf42deb155fb024e2402e26d
    fi
  }
  func_gl_gnulib_m4code_e7ab648fbf42deb155fb024e2402e26d ()
  {
    if $gl_gnulib_enabled_e7ab648fbf42deb155fb024e2402e26d; then :; else
      gl_gnulib_enabled_e7ab648fbf42deb155fb024e2402e26d=true
      func_gl_gnulib_m4code_dce9a78e70979abe3a6dbad14df7de3e
    fi
  }
  func_gl_gnulib_m4code_b3ae4a413a1340415f34a52d1dafb147 ()
  {
    if $gl_gnulib_enabled_b3ae4a413a1340415f34a52d1dafb147; then :; else
      gl_gnulib_enabled_b3ae4a413a1340415f34a52d1dafb147=true
    fi
  }
  func_gl_gnulib_m4code_6897f839bc8beda050d8c73ec20bb548 ()
  {
    if $gl_gnulib_enabled_6897f839bc8beda050d8c73ec20bb548; then :; else
      AC_CHECK_HEADERS_ONCE([stdckdint.h])
      if test $ac_cv_header_stdckdint_h = yes; then
        GL_GENERATE_STDCKDINT_H=false
      else
        GL_GENERATE_STDCKDINT_H=true
      fi
      gl_CONDITIONAL_HEADER([stdckdint.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_6897f839bc8beda050d8c73ec20bb548=true
      func_gl_gnulib_m4code_bool
    fi
  }
  func_gl_gnulib_m4code_a2d2e11ad96cca5edf016975265d1b4f ()
  {
    if $gl_gnulib_enabled_a2d2e11ad96cca5edf016975265d1b4f; then :; else
      gl_STDINT_H
      gl_CONDITIONAL_HEADER([stdint.h])
      dnl Because of gl_REPLACE_LIMITS_H:
      gl_CONDITIONAL_HEADER([limits.h])
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_a2d2e11ad96cca5edf016975265d1b4f=true
      func_gl_gnulib_m4code_46f732ef6fef4ccd68de017c9ed88bed
      func_gl_gnulib_m4code_multiarch
    fi
  }
  func_gl_gnulib_m4code_d35c18bd66af1352be89e09b51bcb62b ()
  {
    if $gl_gnulib_enabled_d35c18bd66af1352be89e09b51bcb62b; then :; else
      gl_STDLIB_H
      gl_STDLIB_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_d35c18bd66af1352be89e09b51bcb62b=true
      func_gl_gnulib_m4code_b3ae4a413a1340415f34a52d1dafb147
    fi
  }
  func_gl_gnulib_m4code_streq ()
  {
    if $gl_gnulib_enabled_streq; then :; else
      gl_gnulib_enabled_streq=true
    fi
  }
  func_gl_gnulib_m4code_threadlib ()
  {
    if $gl_gnulib_enabled_threadlib; then :; else
      AC_REQUIRE([gl_THREADLIB])
      gl_gnulib_enabled_threadlib=true
    fi
  }
  func_gl_gnulib_m4code_cb7562e84d8cf7185af782fe497b53dd ()
  {
    if $gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd; then :; else
      gl_TIME_H
      gl_TIME_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd=true
    fi
  }
  func_gl_gnulib_m4code_verify ()
  {
    if $gl_gnulib_enabled_verify; then :; else
      gl_gnulib_enabled_verify=true
    fi
  }
  func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44 ()
  {
    if $gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44; then :; else
      gl_WCHAR_H
      gl_WCHAR_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44=true
      func_gl_gnulib_m4code_63db4f47e61e1074f851865fcd154b38
      func_gl_gnulib_m4code_d35c18bd66af1352be89e09b51bcb62b
    fi
  }
  func_gl_gnulib_m4code_wcrtomb ()
  {
    if $gl_gnulib_enabled_wcrtomb; then :; else
      gl_FUNC_WCRTOMB
      gl_CONDITIONAL([GL_COND_OBJ_WCRTOMB],
                     [test $HAVE_WCRTOMB = 0 || test $REPLACE_WCRTOMB = 1])
      AM_COND_IF([GL_COND_OBJ_WCRTOMB], [
        gl_PREREQ_WCRTOMB
      ])
      gl_WCHAR_MODULE_INDICATOR([wcrtomb])
      gl_gnulib_enabled_wcrtomb=true
      if test $HAVE_WCRTOMB = 0 || test $REPLACE_WCRTOMB = 1; then
        func_gl_gnulib_m4code_mbsinit
      fi
      func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
    fi
  }
  func_gl_gnulib_m4code_wctype ()
  {
    if $gl_gnulib_enabled_wctype; then :; else
      gl_FUNC_WCTYPE
      gl_CONDITIONAL([GL_COND_OBJ_WCTYPE], [test $HAVE_WCTYPE = 0 || test $REPLACE_WCTYPE = 1])
      gl_WCTYPE_MODULE_INDICATOR([wctype])
      gl_gnulib_enabled_wctype=true
      if test $HAVE_WCTYPE = 0 || test $REPLACE_WCTYPE = 1; then
        func_gl_gnulib_m4code_iswblank
      fi
      if test $REPLACE_WCTYPE = 1; then
        func_gl_gnulib_m4code_iswctype
      fi
      if test $HAVE_WCTYPE = 0 || test $REPLACE_WCTYPE = 1; then
        func_gl_gnulib_m4code_iswdigit
      fi
      if test $HAVE_WCTYPE = 0 || test $REPLACE_WCTYPE = 1; then
        func_gl_gnulib_m4code_iswpunct
      fi
      if test $HAVE_WCTYPE = 0 || test $REPLACE_WCTYPE = 1; then
        func_gl_gnulib_m4code_iswxdigit
      fi
      func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410
    fi
  }
  func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410 ()
  {
    if $gl_gnulib_enabled_3dcce957eadc896e63ab5f137947b410; then :; else
      gl_WCTYPE_H
      gl_WCTYPE_H_REQUIRE_DEFAULTS
      AC_PROG_MKDIR_P
      gl_gnulib_enabled_3dcce957eadc896e63ab5f137947b410=true
    fi
  }
  func_gl_gnulib_m4code_503a4cb75d69c787103d0aa2ab7d8440 ()
  {
    if $gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440=true
    fi
  }
  func_gl_gnulib_m4code_68a4501daeca58988392c7e60b4917ab ()
  {
    if $gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab=true
    fi
  }
  func_gl_gnulib_m4code_f0efff84a70f4afba30902bb8ffe9354 ()
  {
    if $gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354=true
    fi
  }
  func_gl_gnulib_m4code_8bb827fe37eaccf1b97feb0c87bc92ef ()
  {
    if $gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef; then :; else
      AC_REQUIRE([AC_CANONICAL_HOST])
      gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK],
                     [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
      gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef=true
    fi
  }
  if test $REPLACE_GETOPT = 1; then
    func_gl_gnulib_m4code_be453cec5eecf5731a274f2de7f2db36
  fi
  if test $REPLACE_GETOPT = 1; then
    func_gl_gnulib_m4code_5c482add6d2c3d47d6540583663adb7f
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_attribute
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_bool
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_btowc
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_37f71b604aa9c54446783d80f42fe547
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_fd38c7e463b54744b77b98aeafb4fa7c
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_5c482add6d2c3d47d6540583663adb7f
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_intprops
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_iswctype
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_4177a27eb1d1c02825daa4fe09dd8ae0
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_21ee726a3540c09237a8e70c0baf7467
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_46f732ef6fef4ccd68de017c9ed88bed
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_lock
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_e80bf6f757095d2e5fc94dafb8f8fc8b
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_mbrtowc
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_mbsinit
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_nl_langinfo
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_6897f839bc8beda050d8c73ec20bb548
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_a2d2e11ad96cca5edf016975265d1b4f
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_verify
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_4ecd1c701e4ad8dbf53a3ed9185f3f44
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_wcrtomb
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_wctype
  fi
  if test $ac_use_included_regex = yes; then
    func_gl_gnulib_m4code_3dcce957eadc896e63ab5f137947b410
  fi
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_d07eca4c7a24aaac657c64e6568d4c2f], [$gl_gnulib_enabled_d07eca4c7a24aaac657c64e6568d4c2f])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_attribute], [$gl_gnulib_enabled_attribute])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_bool], [$gl_gnulib_enabled_bool])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_btowc], [$gl_gnulib_enabled_btowc])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_37f71b604aa9c54446783d80f42fe547], [$gl_gnulib_enabled_37f71b604aa9c54446783d80f42fe547])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_303a13eed89acabfd6998a952149f2d5], [$gl_gnulib_enabled_303a13eed89acabfd6998a952149f2d5])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_be453cec5eecf5731a274f2de7f2db36], [$gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_fd38c7e463b54744b77b98aeafb4fa7c], [$gl_gnulib_enabled_fd38c7e463b54744b77b98aeafb4fa7c])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_5c482add6d2c3d47d6540583663adb7f], [$gl_gnulib_enabled_5c482add6d2c3d47d6540583663adb7f])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_30838f5439487421042f2225bed3af76], [$gl_gnulib_enabled_30838f5439487421042f2225bed3af76])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_intprops], [$gl_gnulib_enabled_intprops])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_63db4f47e61e1074f851865fcd154b38], [$gl_gnulib_enabled_63db4f47e61e1074f851865fcd154b38])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_iswblank], [$gl_gnulib_enabled_iswblank])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_iswctype], [$gl_gnulib_enabled_iswctype])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_iswdigit], [$gl_gnulib_enabled_iswdigit])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_iswpunct], [$gl_gnulib_enabled_iswpunct])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_iswxdigit], [$gl_gnulib_enabled_iswxdigit])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_4177a27eb1d1c02825daa4fe09dd8ae0], [$gl_gnulib_enabled_4177a27eb1d1c02825daa4fe09dd8ae0])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_21ee726a3540c09237a8e70c0baf7467], [$gl_gnulib_enabled_21ee726a3540c09237a8e70c0baf7467])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_46f732ef6fef4ccd68de017c9ed88bed], [$gl_gnulib_enabled_46f732ef6fef4ccd68de017c9ed88bed])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_localcharset], [$gl_gnulib_enabled_localcharset])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_dce9a78e70979abe3a6dbad14df7de3e], [$gl_gnulib_enabled_dce9a78e70979abe3a6dbad14df7de3e])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_localeconv], [$gl_gnulib_enabled_localeconv])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_lock], [$gl_gnulib_enabled_lock])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_e80bf6f757095d2e5fc94dafb8f8fc8b], [$gl_gnulib_enabled_e80bf6f757095d2e5fc94dafb8f8fc8b])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_ef455225c00f5049c808c2eda3e76866], [$gl_gnulib_enabled_ef455225c00f5049c808c2eda3e76866])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mbrtowc], [$gl_gnulib_enabled_mbrtowc])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mbsinit], [$gl_gnulib_enabled_mbsinit])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mbszero], [$gl_gnulib_enabled_mbszero])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_mbtowc], [$gl_gnulib_enabled_mbtowc])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_multiarch], [$gl_gnulib_enabled_multiarch])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_nl_langinfo], [$gl_gnulib_enabled_nl_langinfo])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_once], [$gl_gnulib_enabled_once])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_94ea50e7ff7c2508f8a5894b17b1211c], [$gl_gnulib_enabled_94ea50e7ff7c2508f8a5894b17b1211c])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_e0dc424e76447be3f4b8566d84038f5a], [$gl_gnulib_enabled_e0dc424e76447be3f4b8566d84038f5a])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_338d7c29761e34ccaa9a69c658124cd8], [$gl_gnulib_enabled_338d7c29761e34ccaa9a69c658124cd8])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_e7e881d32ca02f1c997b13c737c64bbd], [$gl_gnulib_enabled_e7e881d32ca02f1c997b13c737c64bbd])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_e7ab648fbf42deb155fb024e2402e26d], [$gl_gnulib_enabled_e7ab648fbf42deb155fb024e2402e26d])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_b3ae4a413a1340415f34a52d1dafb147], [$gl_gnulib_enabled_b3ae4a413a1340415f34a52d1dafb147])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_6897f839bc8beda050d8c73ec20bb548], [$gl_gnulib_enabled_6897f839bc8beda050d8c73ec20bb548])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_a2d2e11ad96cca5edf016975265d1b4f], [$gl_gnulib_enabled_a2d2e11ad96cca5edf016975265d1b4f])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_d35c18bd66af1352be89e09b51bcb62b], [$gl_gnulib_enabled_d35c18bd66af1352be89e09b51bcb62b])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_streq], [$gl_gnulib_enabled_streq])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_threadlib], [$gl_gnulib_enabled_threadlib])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_cb7562e84d8cf7185af782fe497b53dd], [$gl_gnulib_enabled_cb7562e84d8cf7185af782fe497b53dd])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_verify], [$gl_gnulib_enabled_verify])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_4ecd1c701e4ad8dbf53a3ed9185f3f44], [$gl_gnulib_enabled_4ecd1c701e4ad8dbf53a3ed9185f3f44])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_wcrtomb], [$gl_gnulib_enabled_wcrtomb])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_wctype], [$gl_gnulib_enabled_wctype])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_3dcce957eadc896e63ab5f137947b410], [$gl_gnulib_enabled_3dcce957eadc896e63ab5f137947b410])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_503a4cb75d69c787103d0aa2ab7d8440], [$gl_gnulib_enabled_503a4cb75d69c787103d0aa2ab7d8440])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_68a4501daeca58988392c7e60b4917ab], [$gl_gnulib_enabled_68a4501daeca58988392c7e60b4917ab])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_f0efff84a70f4afba30902bb8ffe9354], [$gl_gnulib_enabled_f0efff84a70f4afba30902bb8ffe9354])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_8bb827fe37eaccf1b97feb0c87bc92ef], [$gl_gnulib_enabled_8bb827fe37eaccf1b97feb0c87bc92ef])
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    gl_libobjdeps=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs $i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gl_libobjdeps="$gl_libobjdeps $i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
    AC_SUBST([gl_LIBOBJDEPS], [$gl_libobjdeps])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gltests])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='tests'
  gl_source_base_prefix=
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    gltests_libobjdeps=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gltests_libobjdeps="$gltests_libobjdeps $i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
    AC_SUBST([gltests_LIBOBJDEPS], [$gltests_libobjdeps])
  ])
  AC_REQUIRE([gl_CC_GNULIB_WARNINGS])
  LIBGNU_LIBDEPS="$gl_libdeps"
  AC_SUBST([LIBGNU_LIBDEPS])
  LIBGNU_LTLIBDEPS="$gl_ltlibdeps"
  AC_SUBST([LIBGNU_LTLIBDEPS])
])

# Like AC_LIBOBJ, except that the module name goes
# into gl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into gl_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [lib])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# Like AC_LIBOBJ, except that the module name goes
# into gltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])

# Like AC_REPLACE_FUNCS, except that the module name goes
# into gltests_LIBOBJS instead of into LIBOBJS.
AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])

# Like AC_LIBSOURCES, except the directory where the source file is
# expected is derived from the gnulib-tool parameterization,
# and alloca is special cased (for the alloca-opt module).
# We could also entirely rely on EXTRA_lib..._SOURCES.
AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])

# This macro records the list of files which have been installed by
# gnulib-tool and may be removed by future gnulib-tool invocations.
AC_DEFUN([gl_FILE_LIST], [
  lib/_Noreturn.h
  lib/arg-nonnull.h
  lib/assert.in.h
  lib/attribute.h
  lib/btowc.c
  lib/c++defs.h
  lib/cdefs.h
  lib/dynarray.h
  lib/getopt-cdefs.in.h
  lib/getopt-core.h
  lib/getopt-ext.h
  lib/getopt-pfx-core.h
  lib/getopt-pfx-ext.h
  lib/getopt.c
  lib/getopt.in.h
  lib/getopt1.c
  lib/getopt_int.h
  lib/gettext.h
  lib/glthread/lock.c
  lib/glthread/lock.h
  lib/glthread/once.c
  lib/glthread/once.h
  lib/glthread/threadlib.c
  lib/hard-locale.c
  lib/hard-locale.h
  lib/intprops-internal.h
  lib/intprops.h
  lib/inttypes.in.h
  lib/iswblank.c
  lib/iswctype-impl.h
  lib/iswctype.c
  lib/iswdigit.c
  lib/iswpunct.c
  lib/iswxdigit.c
  lib/langinfo.in.h
  lib/lc-charset-dispatch.c
  lib/lc-charset-dispatch.h
  lib/libc-config.h
  lib/limits.in.h
  lib/localcharset.c
  lib/localcharset.h
  lib/locale.in.h
  lib/localeconv.c
  lib/malloc.c
  lib/malloc/dynarray-skeleton.c
  lib/malloc/dynarray.h
  lib/malloc/dynarray_at_failure.c
  lib/malloc/dynarray_emplace_enlarge.c
  lib/malloc/dynarray_finalize.c
  lib/malloc/dynarray_resize.c
  lib/malloc/dynarray_resize_clear.c
  lib/mbrtowc-impl-utf8.h
  lib/mbrtowc-impl.h
  lib/mbrtowc.c
  lib/mbsinit.c
  lib/mbszero.c
  lib/mbtowc-impl.h
  lib/mbtowc-lock.c
  lib/mbtowc-lock.h
  lib/mbtowc.c
  lib/nl_langinfo-lock.c
  lib/nl_langinfo.c
  lib/pthread-once.c
  lib/pthread.in.h
  lib/regcomp.c
  lib/regex.c
  lib/regex.h
  lib/regex_internal.c
  lib/regex_internal.h
  lib/regexec.c
  lib/sched.in.h
  lib/setlocale-lock.c
  lib/setlocale_null-unlocked.c
  lib/setlocale_null.c
  lib/setlocale_null.h
  lib/stdckdint.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdlib.c
  lib/stdlib.in.h
  lib/streq.h
  lib/sys_types.in.h
  lib/time.in.h
  lib/unistd.c
  lib/unistd.in.h
  lib/verify.h
  lib/warn-on-use.h
  lib/wchar.in.h
  lib/wcrtomb.c
  lib/wctype-h.c
  lib/wctype-impl.h
  lib/wctype.c
  lib/wctype.in.h
  lib/windows-initguard.h
  lib/windows-mutex.c
  lib/windows-mutex.h
  lib/windows-once.c
  lib/windows-once.h
  lib/windows-recmutex.c
  lib/windows-recmutex.h
  lib/windows-rwlock.c
  lib/windows-rwlock.h
  m4/00gnulib.m4
  m4/__inline.m4
  m4/absolute-header.m4
  m4/assert_h.m4
  m4/btowc.m4
  m4/build-to-host.m4
  m4/builtin-expect.m4
  m4/c-bool.m4
  m4/codeset.m4
  m4/extensions-aix.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/getopt.m4
  m4/gnulib-common.m4
  m4/gnulib-i18n.m4
  m4/include_next.m4
  m4/inttypes.m4
  m4/iswblank.m4
  m4/iswctype.m4
  m4/iswdigit.m4
  m4/iswpunct.m4
  m4/iswxdigit.m4
  m4/langinfo_h.m4
  m4/limits-h.m4
  m4/localcharset.m4
  m4/locale-en.m4
  m4/locale-fr.m4
  m4/locale-ja.m4
  m4/locale-zh.m4
  m4/locale_h.m4
  m4/localeconv.m4
  m4/lock.m4
  m4/malloc.m4
  m4/mbrtowc.m4
  m4/mbsinit.m4
  m4/mbstate_t.m4
  m4/mbtowc.m4
  m4/multiarch.m4
  m4/musl.m4
  m4/nl_langinfo.m4
  m4/nocrash.m4
  m4/off64_t.m4
  m4/off_t.m4
  m4/once.m4
  m4/pid_t.m4
  m4/pthread-once.m4
  m4/pthread-spin.m4
  m4/pthread_h.m4
  m4/pthread_rwlock_rdlock.m4
  m4/regex.m4
  m4/sched_h.m4
  m4/setlocale_null.m4
  m4/ssize_t.m4
  m4/std-gnu11.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdlib_h.m4
  m4/sys_cdefs_h.m4
  m4/sys_types_h.m4
  m4/threadlib.m4
  m4/time_h.m4
  m4/unistd_h.m4
  m4/vararrays.m4
  m4/visibility.m4
  m4/warn-on-use.m4
  m4/wchar_h.m4
  m4/wcrtomb.m4
  m4/wctype.m4
  m4/wctype_h.m4
  m4/wint_t.m4
  m4/zzgnulib.m4
])
